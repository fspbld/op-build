From a465ee7e818b7551d49ebb60c7d56f33a98474f1 Mon Sep 17 00:00:00 2001
From: Zane Shelley <zshelle@us.ibm.com>
Date: Fri, 2 Oct 2015 14:43:14 -0500
Subject: [PATCH] PRD: Disable SCOM to PCIE_OSC_SWITCH during OP checkstop
 analysis

Change-Id: I39647e9e5b9217b5cc2832f6f904cb49ebc9822b
CQ: SW324508
Reviewed-on: http://gfw160.aus.stglabs.ibm.com:8080/gerrit/20929
Reviewed-by: BENJAMIN J. WEISENBECK <bweisenb@us.ibm.com>
Reviewed-by: Caleb N. Palmer <cnpalmer@us.ibm.com>
Tested-by: Jenkins Server
Reviewed-by: A. Patrick Williams III <iawillia@us.ibm.com>
Reviewed-by: Zane Shelley <zshelle@us.ibm.com>
Reviewed-on: http://gfw160.aus.stglabs.ibm.com:8080/gerrit/20958
Tested-by: Jenkins OP Build CI
Tested-by: Jenkins OP HW
Tested-by: FSP CI Jenkins
---
 src/usr/diag/prdf/common/plat/pegasus/prdfP8PllPcie.C | 17 +++++++++++++++++
 src/usr/diag/prdf/occ_firdata/prdfWriteHomerFirData.C |  2 +-
 2 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/src/usr/diag/prdf/common/plat/pegasus/prdfP8PllPcie.C b/src/usr/diag/prdf/common/plat/pegasus/prdfP8PllPcie.C
index a11d8f5..4d1d556 100755
--- a/src/usr/diag/prdf/common/plat/pegasus/prdfP8PllPcie.C
+++ b/src/usr/diag/prdf/common/plat/pegasus/prdfP8PllPcie.C
@@ -486,6 +486,23 @@ uint32_t getIoOscPos( ExtensibleChip * i_chip,
     {
         int32_t rc = SUCCESS;
 
+        // START WORKAROUND
+        // TODO: RTC 137711 - This redundant clock code only applies to Brazos
+        //       systems. Unfortunately, this code made it into the common
+        //       source and we ran into SW324506 where we are unable to SCOM
+        //       PCIE_OSC_SWITCH during OP checkstop analysis. We should have
+        //       a system attribute that tells us if redundant clock are enabled
+        //       but for now just assume anything that is OPAL based will not
+        //       have redundant clocks. Note that we still need this code in
+        //       Hostboot (not HBRT) because Hostboot is still run on a Brazos
+        //       system.
+        if ( isHyprConfigOpal() )
+        {
+            o_oscPos = 0;
+            break;
+        }
+        // END WORKAROUND
+
         SCAN_COMM_REGISTER_CLASS * pcieOscSwitchReg =
                 i_chip->getRegister("PCIE_OSC_SWITCH");
 
diff --git a/src/usr/diag/prdf/occ_firdata/prdfWriteHomerFirData.C b/src/usr/diag/prdf/occ_firdata/prdfWriteHomerFirData.C
index 5d6d04f..12c9550 100644
--- a/src/usr/diag/prdf/occ_firdata/prdfWriteHomerFirData.C
+++ b/src/usr/diag/prdf/occ_firdata/prdfWriteHomerFirData.C
@@ -134,7 +134,7 @@ static uint32_t proc_reg[] =
     0x09012800, // PCICLOCKFIR_2
 
     // PLL registers
-    0x00050019, // PCIE_OSC_SWITCH
+    //0x00050019, // PCIE_OSC_SWITCH - disabled due to SW324506
     0x01020019, // OSCERR
 
     // TOD registers
